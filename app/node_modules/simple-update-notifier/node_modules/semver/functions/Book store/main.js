const express = require('express');
const bodyParser = require('body-parser')
const { STATUS_CODES } = require('http');
const app = express();
const path = require('path');
const port = 80;
app.set('view engine','hbs');
app.use(express.urlencoded());
app.use(bodyParser.urlencoded({extended:false}));
app.set('views',path.join(__dirname , 'views'));
app.get('/',(req,res)=>{
    res.status(200).render('Home');
})
app.get('/Home',(req,res)=>{
    res.status(200).render('Home');
})
app.get('/Signup',(req,res)=>{
    res.status(200).render('Sign up')
})
app.get('/Religious',(req,res)=>{
    res.status(200).render('Religious')
})
app.get('/Fiction',(req,res)=>{
    res.status(200).render('Fiction')
})
app.post('/post',(req,res)=>{
    console.log(req.body)
    res.status(200).render('Dune')
})
app.post('/action',(req,res)=>{
    console.log(req.body)
    res.status(200).render('Frankanstie')
})
app.post('/Account',(req,res)=>{
    console.log(req.body)
    let word = req.body.UserPassword
     if(word == ''){
    res.json('Enter Password')
}
    else if(word.length < 8){
        res.json('Enter A valid password')
    }
    else{
        res.status(200).render('Sign up')
    }
    res.status(200).render('Sign up')
})
app.post('/search',bodyParser.urlencoded({extended:false}),(req,res)=>{
    console.log(req.body)
    let name = req.body.search
    if(name == 'The Hidden Hindu'){
        res.status(200).render('Hindu')
    }
    else if(name == 'Shiv puran'){
        res.status(200).render('Shivpuran')
    }
    else if(name == 'Sam Veda'){
        res.status(200).render('SamVeda')
    }
    else if(name == 'Rig Veda'){
        res.status(200).render('RigVeda')
    }
    else if(name == 'Atharva Veda'){
        res.status(200).render('AtharvaVeda')
    }
    else if(name == 'Bhagvad Gita'){
        res.status(200).render('BhagvadGita')
    }
    else if(name == 'Bible'){
        res.status(200).render('Bible')
    }
    else if(name == 'Shriramcharitmanas'){
        res.status(200).render('Shri Ramcharitmanas')
    }
    else if(name == 'Yajur veda'){
        res.status(200).render('Yajur')
    }
    else if(name == 'Bhavishyapuran'){
        res.status(200).render('Bhavishyapuran')
    }
    else if(name == ''){
        res.status(200).render('Home')
    }
    else{
        res.json(`No matches found for ${name}`)
    }
})
app.get('/Account',(req,res)=>{
    res.status(200).render('MyAccount')
})
app.get('/Hidden',(req,res)=>{
    res.status(200).render('Hindu')
})
app.get('/Shriramcharitmanas',(req,res)=>{
    res.status(200).render('Shriramcharitmanas')
})
app.get('/Gita',(req,res)=>{
    res.status(200).render('BhagvadGita')
})
app.get('/Veda',(req,res)=>{
    res.status(200).render('AtharvaVeda')
})
app.get('/shivpuran',(req,res)=>{
    res.status(200).render('Shivpuran')
})
app.get('/rigveda',(req,res)=>{
    res.status(200).render('rigveda')
})
app.get('/puran',(req,res)=>{
    res.status(200).render('Bhavishyapuran')
})
app.get('/yajurveda',(req,res)=>{
    res.status(200).render('Yajur')
})
app.get('/samveda',(req,res)=>{
    res.status(200).render('SamVeda')
})
app.get('/Bible',(req,res)=>{
    res.status(200).render('Bible')
})
app.get('/TheMartian',(req,res)=>{
    res.status(200).render('The Martian')
})
app.get('/Dune',(req,res)=>{
    res.status(200).render('Dune')
})
app.get('/TheWarOfTheWorlds',(req,res)=>{
    res.status(200).render('TheWarOfTheWorlds')
})
app.get('/ChildrenOfTime',(req,res)=>{
    res.status(200).render('ChildrenOfTime')
})
app.get('/LeviathanWakes',(req,res)=>{
    res.status(200).render('Leviathan Wakes')
})
app.get('/Ninteen-Eighty-Four',(req,res)=>{
    res.status(200).render('NinteenEightyFour')
})
app.get('/RedMars',(req,res)=>{
    res.status(200).render('RedMars')
})
app.get('/Frankanstie',(req,res)=>{
    res.status(200).render('Frankanstie')
})
app.get('/TheTimeMachine',(req,res)=>{
    res.status(200).render('The Time Machine')
})
app.get('/DoAndroidsDreamof',(req,res)=>{
    res.status(200).render('Do Andriods Dream of')
})
app.listen(port , ()=>{
    console.log(`The Application is running successfully at port ${port}`)
});
